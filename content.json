{"meta":{"title":"aJream","subtitle":"","description":"aJream的个人博客","author":"aJream","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2023-09-03T12:33:19.269Z","updated":"2023-09-03T12:33:19.269Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"友链","date":"2023-09-04T07:35:08.664Z","updated":"2023-09-04T07:35:08.664Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"","text":"我自己博客园我在博客园的博客CSDN我在CSDN的博客知乎我的知乎 作者大大~xaoxuuMHuiGinkssColsrchDrew233Linhk1606W4J1e大神们Akilarの糖果屋Jerry優萌初華の霜月琉璃小伙伴们~感谢小伙伴们带来的干货🎉ReverseSacle是非题solstice23’s Blog宫水三叶の刷题日记北辰の小栈"},{"title":"所有分类","date":"2023-09-03T12:42:44.510Z","updated":"2023-09-03T12:42:44.510Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2023-09-03T12:33:43.770Z","updated":"2023-09-03T12:33:43.770Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2023-09-03T05:50:03.105Z","updated":"1985-10-26T08:15:00.000Z","comments":true,"path":"2023/09/03/hello-world/","link":"","permalink":"http://example.com/2023/09/03/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"GitCode & Picgo图床","slug":"GitCode图床","date":"2022-08-10T15:32:49.000Z","updated":"2022-08-11T05:20:23.000Z","comments":true,"path":"2022/08/10/GitCode图床/","link":"","permalink":"http://example.com/2022/08/10/GitCode%E5%9B%BE%E5%BA%8A/","excerpt":"","text":"GitCode图床GitCode实际上是使用Gitlab服务搭建的一个代码托管平台，因此我们可以使用【Gitlab】图床插件来将图片上传到Gitcode。而从npm官网上正好可以找到这样的插件： 注意：推荐使用第一个插件 picgo-plugin-gitlab-files，这个插件上传的图片存放在自己的仓库里，另一个好像不是存放在自己的仓库。 另外，听说又拍云作为图床也很不错，不过由于又要注册又要实名认证的，以后再弄吧。（Gitcode与CSDN账号关联，不用重新注册） 插件下载下载图床工具 切换到picgo安装目录，下载 picgo-plugin-gitlab-files 插件 1C:\\Users\\用户名\\AppData\\Roaming\\Typora\\picgo\\win64&gt;picgo install picgo install gitlab-files PicGo-Core官网 插件配置输入下面的命令，然后根据提示选择上传插件，然后进行插件配置即可，插件配置参数可以看下面的表格，也可以去插件官方文档查看 1picgo set uploader # 选择上传插件 (“可选”参数一般不选，默认即可) 名称 介绍 配置示例 gitlab服务器地址 服务器地址,建议末尾不带/ https://gitcode.net 项目id 在项目设置页面查看,后文介绍 1254 默认分支 注意可能为main，也可以为其他分支 master gitlab的token 获取方式见后文(PicGo会明文保存) fw45d1z7sa6rz69KOsxq 自托管的Gitlab版本是否低于13.0 可选,对于Gitlab版本低于13.0的情况,使用 raw ,否则使用 -/raw Gitcode的版本大于13，所以选择false 文件名及其路径 可选,文件名和路径,占位符见后文,是否以/开头均可 /pictures/&#123;year&#125;/&#123;month&#125;/&#123;day&#125;_&#123;hour&#125;_&#123;minute&#125;_&#123;second&#125;_&#123;fileName&#125; 上传文件的Message 可选 Upload &#123;fileName&#125; By PicGo gitlab files uploader at &#123;year&#125;-&#123;month&#125;-&#123;day&#125; 是否同步删除远程对象 可选,本地删除文件后是否在Gitlab删除 false 删除文件的Message 可选 Delete &#123;fileName&#125; By PicGo gitlab files uploader at &#123;year&#125;-&#123;month&#125;-&#123;day&#125; 删除远程图片后是否通知 可选,如果开启会有两个通知 false 上传者的邮箱 可选,建议不填写,可以不存在,可以不属于自己 test@example.com 上传者的用户名 可选,建议不填写,可以不存在,可以不属于自己 example 配置完成后可以在 C:\\Users\\用户名\\.picgo\\config.json 查看刚才的配置（方便以后随时修改），如下： 注意看 uploader和current 参数是否是 gitlab-files-uploader 1234567891011121314151617181920212223242526&#123; &quot;picBed&quot;: &#123; &quot;uploader&quot;: &quot;gitlab-files-uploader&quot;, &quot;current&quot;: &quot;gitlab-files-uploader&quot;, // 与uploader一致 &quot;transformer&quot;: &quot;path&quot;, &quot;gitlab-files-uploader&quot;: &#123; &quot;gitUrl&quot;: &quot;https://gitcode.net&quot;, // 服务器地址 &quot;projectId&quot;: &quot;自己项目的ID&quot;, &quot;branch&quot;: &quot;master&quot;, &quot;gitToken&quot;: &quot;自己的token&quot;, &quot;gitVersionUnderThirteen&quot;: false, &quot;fileName&quot;: &quot;/pictures/&#123;year&#125;/&#123;month&#125;/&#123;day&#125;_&#123;hour&#125;_&#123;minute&#125;_&#123;second&#125;_&#123;fileName&#125;&quot;, // 保存路径 &quot;commitMessage&quot;: &quot;Upload &#123;fileName&#125; By PicGo gitlab files uploader at &#123;year&#125;-&#123;month&#125;-&#123;day&#125;&quot;, &quot;deleteRemote&quot;: false, &quot;deleteMessage&quot;: &quot;Delete &#123;fileName&#125; By PicGo gitlab files uploader at &#123;year&#125;-&#123;month&#125;-&#123;day&#125;&quot;, &quot;deleteInform&quot;: false, &quot;authorMail&quot;: &quot;&quot;, &quot;authorName&quot;: &quot;&quot; &#125; &#125;, &quot;picgoPlugins&quot;: &#123; &quot;picgo-plugin-gitlab-files&quot;: true &#125;,&#125; 项目ID获取： Token获取，前往页面 （注意退出页面后token不可再查看，如果忘记了只能新建一个）token到期时间设置久一点就行了。 上传测试打开typora，拖入一张图片，上传成功即可，如果失败，请检查【项目id】、【token】是否有错","categories":[{"name":"创作笔记","slug":"创作笔记","permalink":"http://example.com/categories/%E5%88%9B%E4%BD%9C%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"图床","slug":"图床","permalink":"http://example.com/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"ESP8266(1)-接入点模式-无线终端模式","slug":"1-接入点模式-无线终端模式","date":"2021-08-02T00:00:00.000Z","updated":"2022-02-04T23:32:45.000Z","comments":true,"path":"2021/08/02/1-接入点模式-无线终端模式/","link":"","permalink":"http://example.com/2021/08/02/1-%E6%8E%A5%E5%85%A5%E7%82%B9%E6%A8%A1%E5%BC%8F-%E6%97%A0%E7%BA%BF%E7%BB%88%E7%AB%AF%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"接入点模式：开发板作为路由器（网关），可以让其他设备连接 无线终端模式：开发板作为终端，可以连接路由器WiFi 说明：此处使用ArduinoIDE来进行开发。 注意：上传代码前必须把“串口监视器” 关闭，否则可能上传出错，因为端口被占用了 1、配置接入点模式即开启 “热点” 导入 ESP8266WiFi.h库 配置WiFi名称（ssid）、密码（passwd）—— softAP() 123const char ssid[] = &quot;MyWiFi&quot;;const char passwd[] = &quot;12345678&quot;;WiFi.softAP(ssid, passwd); 获取开发板IP 1WiFi.softAPIP(); 完整code 1234567891011121314151617181920212223#include &lt;ESP8266WiFi.h&gt;char ssid[] = &quot;MyWiFi&quot;;char passwd[] = &quot;1234567890&quot;;void setup()&#123; Serial.begin(9600); Serial.print(&quot;wifi ssid: &quot;); Serial.println(ssid); Serial.print(&quot;wifi password: &quot;); Serial.println(passwd); WiFi.softAP(ssid, passwd); //开启接入点模式 Serial.print(&quot;IP Address: &quot;); Serial.println(WiFi.softAPIP()); //打印开发板的IP&#125;void loop()&#123; &#125; 2、配置无线终端模式只有1个WiFi将开发板连接WiFi 123//ssid、passwd均为字符串WiFi.mode(WIFI_STA);WiFi.begin(ssid, passwd); 多次尝试连接，直到连接上： 1234while(WiFi.status() != WL_CONNECTED )&#123; delay(1000); //....&#125; 连上WiFi后，获取wifi的ssid、开发板IP地址： 12WiFi.SSID(); //返回字符串WiFi.localIP(); //返回字符串 完整code： 1234567891011121314151617181920212223242526#include &lt;ESP8266WiFi.h&gt; // 本程序使用ESP8266WiFi库String ssid = &quot;aaa&quot;; String password = &quot;12345678&quot;; void setup() &#123; Serial.begin(9600); WiFi.begin(ssid, password); int i = 0; while (WiFi.status() != WL_CONNECTED) &#123; delay(1000); Serial.print(i++); Serial.print(&#x27; &#x27;); &#125; Serial.println(&quot;&quot;); Serial.print(&quot;Connecting to &quot;); Serial.println(ssid); Serial.println(&quot;IP address: &quot; ); Serial.println(WiFi.localIP()); &#125;void loop() &#123; &#125; 多个WiFi，自动连接最强信号的 先添加几个待选WiFi 1234567891011//导入库#include &lt;ESP8266WiFiMulti.h&gt;// 创建ESP8266WiFiMulti对象ESP8266WiFiMulti wifiMulti; //通过addAP()函数存储WiFi的ssid和密码wifiMulti.addAP(&quot;aaaa&quot;, &quot;11111111&quot;);wifiMulti.addAP(&quot;bbbb&quot;, &quot;22222222&quot;);wifiMulti.addAP(&quot;cccc&quot;, &quot;33333333&quot;); 多次尝试连接：wifiMulti.run() 12345 // 将会连接信号最强的那一个WiFi信号。while (wifiMulti.run() != WL_CONNECTED) &#123; delay(1000); Serial.print(&#x27;...&#x27;); &#125; 完整code： 123456789101112131415161718192021222324252627#include &lt;ESP8266WiFi.h&gt;#include &lt;ESP8266WiFiMulti.h&gt;ESP8266WiFiMulti wifiMulti; //创建对象void setup()&#123; Serial.begin(9600); wifiMulti.addAP(&quot;aaa&quot;, &quot;12345678&quot;); wifiMulti.addAP(&quot;bbb&quot;, &quot;12345678&quot;); wifiMulti.addAP(&quot;ccc&quot;, &quot;12345678&quot;); int i = 0; while (wifiMulti.run() != WL_CONNECTED)&#123; delay(1000); Serial.print(++i); Serial.print(&quot; &quot;); &#125; Serial.println(&quot;&quot;); Serial.print(&quot;IP Address: &quot;); Serial.println(WiFi.localIP()); &#125;void loop()&#123;&#125;","categories":[{"name":"硬件学习","slug":"硬件学习","permalink":"http://example.com/categories/%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"ESP8266","slug":"硬件学习/ESP8266","permalink":"http://example.com/categories/%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/ESP8266/"}],"tags":[{"name":"ESP8266","slug":"ESP8266","permalink":"http://example.com/tags/ESP8266/"}]},{"title":"ESP8266(0)-Arduino配置esp8266开发环境","slug":"Arduino配置esp8266开发环境","date":"2021-08-01T00:10:21.000Z","updated":"2022-05-07T01:13:51.000Z","comments":true,"path":"2021/08/01/Arduino配置esp8266开发环境/","link":"","permalink":"http://example.com/2021/08/01/Arduino%E9%85%8D%E7%BD%AEesp8266%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","excerpt":"","text":"一般方法（要求网速较好） 打开ArduinoIDE，在 文件-&gt;首选项 的附加开发板管理器网址 添加下面地址： 1http://arduino.esp8266.com/stable/package_esp8266com_index.json 在工具-&gt;开发板-&gt;开发板管理器，搜索 esp8266，然后选择安装即可 特殊方法（适用于网络不好）一般方法中如果因为网速过慢，可能在下载过程中会比较慢甚至出错，因此可以自己去GitHub下载对应文件再放到指定文件夹下即可 过程较为麻烦，不想看的直接看最后： 去earlephilhower下载下面这4个zip文件： 1234x86_64-w64-mingw32.xtensa-lx106-elf-1757bed.210717.zipx86_64-w64-mingw32.mkspiffs-7fefeac.210717.zippython3-3.7.2.post1-embed-win32v2a.zipx86_64-w64-mingw32.mklittlefs-943d2f7.210717.zip 去esp8266-Arduino下载esp8266-3.0.2.zip 克隆这个仓库，或者下载zip包 1https://github.com/esp8266/Arduino.git 解压后改名为esp8266，放到目录(没有的文件夹自己新建)： 1C:\\Users\\用户名\\Documents\\Arduino\\hardware\\esp8266com\\ 用第2步下载的zip包中的 libraries 文件夹来代替第3步下载的文件夹中 的libraries 将第一步下载的4个zip包分别重命名： 1234x86_64-w64-mingw32.xtensa-lx106-elf-1757bed.210717.zip --&gt; xtensa-lx106-elf.zipx86_64-w64-mingw32.mkspiffs-7fefeac.210717.zip --&gt; mkspiffs.zippython3-3.7.2.post1-embed-win32v2a.zip --&gt; python3.zipx86_64-w64-mingw32.mklittlefs-943d2f7.210717.zip --&gt; mklittlefs.zip 然后解压到在第三步的 tool文件夹中，下面是解压后： 我已经把这5步全部做完，放到压缩包 esp8266.zip 中，需要的可以去百度网盘下载【链接: https://pan.baidu.com/s/1UqUJXgvzQecXZjqRe_JLaA 提取码: 6xpa】，或者csdn下载【https://download.csdn.net/download/m0_46079750/20887320】，并解压到 下面的目录即可： 1C:\\Users\\用户名\\Documents\\Arduino\\hardware\\esp8266com\\","categories":[{"name":"硬件学习","slug":"硬件学习","permalink":"http://example.com/categories/%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"ESP8266","slug":"硬件学习/ESP8266","permalink":"http://example.com/categories/%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/ESP8266/"}],"tags":[{"name":"ESP8266","slug":"ESP8266","permalink":"http://example.com/tags/ESP8266/"}]}],"categories":[{"name":"创作笔记","slug":"创作笔记","permalink":"http://example.com/categories/%E5%88%9B%E4%BD%9C%E7%AC%94%E8%AE%B0/"},{"name":"硬件学习","slug":"硬件学习","permalink":"http://example.com/categories/%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"ESP8266","slug":"硬件学习/ESP8266","permalink":"http://example.com/categories/%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/ESP8266/"}],"tags":[{"name":"图床","slug":"图床","permalink":"http://example.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"ESP8266","slug":"ESP8266","permalink":"http://example.com/tags/ESP8266/"}]}